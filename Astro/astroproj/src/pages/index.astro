---
import PrimaryLayout from "../layout/primaryLayout.astro";

---

<PrimaryLayout title="Home">

	<section id="landing">
		<div>
			<div>
				<div class="text">
					<h1><span id="changeText"></span>_</h1>
					<h3>A page to interact with friends and family!</h3>
				</div>
				<div class="button-wrapper">
					<a href="#">Chat now</a>
					<a href="#">What's new?</a>
				</div>
			</div>
			<div class="pr-wrapper">
				<h1>On phone soon!</h1>
				<div class="phone-replica">
					<div>
						<div>
							<h1><span id="changeTextPhone"></span>_</h1>
							<h3>A page to interact with friends and family!</h3>
						</div>
						<div class="button-wrapper mini">
							<a href="#">Chat now</a>
							<a href="#">What's new?</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>

</PrimaryLayout>

<style>
	section {
		width: 100%;
		min-height: 80vh;

		padding: 10vh 0;

		background-color: rgba(20, 20, 20, 1);
	}

	section>div {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 4rem;

		width: 100%;
	}
	
	.text{
		color: #ffffff
	}

	.text h1 {
		min-height: 4rem;
		font-size: 4rem;
	}

	.button-wrapper {
		display: flex;
		justify-content: flex-start;
		align-items: center;
		gap: 1rem;

	}

	.button-wrapper a {
		width: fit-content;
		min-height: 1rem;

		padding: 0.5rem 1rem;
		border-radius: 0.5rem;
		margin-top: 2rem;

		background-color: #69140e;
		color: #ffffff;
		text-decoration: none;
		font-size: 1rem;

		transition: 0.2s linear;
	}

	.button-wrapper.mini {
		display: block;
	}

	.button-wrapper.mini a {
		width: fit-content;
		min-height: 0.2rem;

		padding: 0.1rem 0.2rem;
		border-radius: 0.2rem;
		margin-top: 0.2rem;

		font-size: 0.2rem;
	}

	.button-wrapper a:hover {
		background-color: #a72016;

	}
	.button-wrapper a:active {
		background-color: #320906;
	}

	.pr-wrapper {
		color: #ffffff;
		pointer-events: none;
	}

	.pr-wrapper>h1 {
		width: fit-content;

		margin: 0 auto 1rem auto;
	}

	.phone-replica {
		position: relative;

		display: flex;
		justify-content: center;
		align-items: center;

		width: 8rem;
		height: 20rem;

		padding: 0 1rem;
		border: 1rem solid rgba(100, 100, 100, 1);
		border-radius: 2rem;

		background-color: rgba(20, 20, 20, 1);
	}

	.phone-replica::before {
		content: ' ';
		position: absolute;
		top: 0;
		left: 50%;
		transform: translateX(-50%);

		width: 50%;
		height: 1rem;

		border-radius: 0 0 50% 50%;

		background-color: rgba(100, 100, 100, 1);
	}

	.phone-replica>div {
		width: 80%;
	}

	.phone-replica>div>div h1 {
		font-size: 0.8rem;
	}
	.phone-replica>div>div h3 {
		font-size: 0.5rem;
		word-break: break-all;
	}
</style>

<script>
	const changeText:any = document.getElementById("changeText");
	const changeTextPhone:any = document.getElementById("changeTextPhone");
	const textArray:string[] = ["Find!", "Chat!", "Share!"]

	function writeText (word:number, iteration:number,) {
		if (iteration < textArray[word].length) {
			changeText.innerText = `${changeText.innerText}${textArray[word].charAt(iteration)}`
			changeTextPhone.innerText = `${changeTextPhone.innerText}${textArray[word].charAt(iteration)}`
			setTimeout(() => {
				writeText(word, iteration + 1);
			}, 250)
		} else {
			setTimeout(() => {
				removeText(word, textArray[word].length);
			}, 1000)
		}
		
	}
	
	function removeText (word:number, iteration:number) {
		if (iteration >= 0) {
			changeText.innerText = `${textArray[word].slice(0, iteration)}`
			changeTextPhone.innerText = `${textArray[word].slice(0, iteration)}`
			setTimeout(() => {
				removeText(word, iteration - 1);
			}, 150)
		} else {
			if (word >= textArray.length - 1) {
				word = -1;
			}
			setTimeout(() => {
				writeText(word + 1, 0);
			}, 500)
		}
		
	}

	writeText(0, 0)

</script>