---
import lang from '../../data/lang'

interface Props {
    currentlang: number;
}

const { currentlang } = Astro.props as Props

const data = lang[currentlang].data.contact;

---

<section id="contact">

    <form id="frf" class="family-request-form">
        <h2 class="frf-header">{data?.familyrequestform.header}</h2>
        <div>
            <input type="text" placeholder={ data?.familyrequestform.firstname } required />
            <input type="text" placeholder={ data?.familyrequestform.lastname }  required />
        </div>
        <div>
            <select required> 
                <option>{ data?.familyrequestform.gender }</option>
                <option>{ data?.familyrequestform.male }</option>
                <option>{ data?.familyrequestform.female }</option>
            </select>
            <input type="date" required />
        </div>
        <div>
            <input type="text" placeholder={ data?.familyrequestform.mother } required />
            <input type="text" placeholder={ data?.familyrequestform.father } required />
        </div>
        <input type="text" placeholder={ data?.familyrequestform.children }  />
        <textarea placeholder={ data?.familyrequestform.about} required />
        <div>
            <select required>
                <option>{ data?.familyrequestform.bornin }</option>
                <option>Australia</option>
                <option>Canada</option>
                <option>Denmark</option>
                <option>Finland</option>
                <option>France</option>
                <option>Germany</option>
                <option>Iceland</option>
                <option>New Zealand</option>
                <option>Norway</option>
                <option>United Kingdom</option>
                <option>United States of America</option>
            </select>
            <select>
                <option>{ data?.familyrequestform.diedin }</option>
                <option>{ data?.familyrequestform.birthcountry }</option>
                <option>Afghanistan</option>
                <option>Albania</option>
                <option>Algeria</option>
                <option>Andorra</option>
                <option>Angola</option>
                <option>Antigua and Barbuda</option>
                <option>Argentina</option>
                <option>Armenia</option>
                <option>Australia</option>
                <option>Austria</option>
                <option>Azerbaijan</option>
                <option>Bahamas</option>
                <option>Bahrain</option>
                <option>Bangladesh</option>
                <option>Barbados</option>
                <option>Belarus</option>
                <option>Belgium</option>
                <option>Belize</option>
                <option>Benin</option>
                <option>Bhutan</option>
                <option>Bolivia</option>
                <option>Bosnia and Herzegovina</option>
                <option>Botswana</option>
                <option>Brazil</option>
                <option>Brunei</option>
                <option>Bulgaria</option>
                <option>Burkina Faso</option>
                <option>Burundi</option>
                <option>CÃ´te d'Ivorie</option>
                <option>Cabo Verde</option>
                <option>Cambodia</option>
                <option>Cameroon</option>
                <option>Canada</option>
                <option>Central African Republic</option>
                <option>Chad</option>
                <option>Chile</option>
                <option>China</option>
                <option>Colombia</option>
                <option>Comoros</option>
                <option>Congo</option>
                <option>Costa Rica</option>
                <option>Cyprus</option>
                <option>Czech Republic</option>
                <option>Democratic Republic of the Congo</option>
                <option>Denmark</option>
                <option>Djibouti</option>
                <option>Dominica</option>
                <option>Dominician Republic</option>
                <option>Ecuador</option>
                <option>Egypt</option>
                <option>El Salvador</option>
                <option>Equatorial Guinea</option>
                <option>Eritrea</option>
                <option>Estonia</option>
                <option>Eswatini</option>
                <option>Ethiopia</option>
                <option>Fiji</option>
                <option>Finland</option>
                <option>France</option>
                <option>Gabon</option>
                <option>Gambia</option>
                <option>Georgia</option>
                <option>Germany</option>
                <option>Ghana</option>
                <option>Greece</option>
                <option>Grenada</option>
                <option>Guatamala</option>
                <option>Guinea</option>
                <option>Guinea-Bissau</option>
                <option>Guyana</option>
                <option>Haiti</option>
                <option>Honduras</option>
                <option>Hungary</option>
                <option>Iceland</option>
                <option>India</option>
                <option>Indonesia</option>
                <option>Iran</option>
                <option>Iraq</option>
                <option>Ireland</option>
                <option>Israel</option>
                <option>Italy</option>
                <option>Jamaica</option>
                <option>Japan</option>
                <option>Jordan</option>
                <option>Kazakhstan</option>
                <option>Kenya</option>
                <option>Kiribati</option>
                <option>Kuwait</option>
                <option>Kyrgyztan</option>
                <option>Laos</option>
                <option>Latvia</option>
                <option>Lebanon</option>
                <option>Lesotho</option>
                <option>Liberia</option>
                <option>Libya</option>
                <option>Liechtenstein</option>
                <option>Lithuania</option>
                <option>Luxemburg</option>
                <option>Madagascar</option>
                <option>Malawi</option>
                <option>Malaysia</option>
                <option>Maldives</option>
                <option>Mali</option>
                <option>Malta</option>
                <option>Marshall Islands</option>
                <option>Mauritania</option>
                <option>Mauritius</option>
                <option>Mexico</option>
                <option>Micronesia</option>
                <option>Moldova</option>
                <option>Monaco</option>
                <option>Mongolia</option>
                <option>Montenegro</option>
                <option>Morocco</option>
                <option>Mozambique</option>
                <option>Myanmar</option>
                <option>Namibia</option>
                <option>Nauru</option>
                <option>Nepal</option>
                <option>Netherlands</option>
                <option>New Zealand</option>
                <option>Nicaragua</option>
                <option>Niger</option>
                <option>Nigeria</option>
                <option>North Korea</option>
                <option>North Macedonia</option>
                <option>Norway</option>
                <option>Oman</option>
                <option>Pakistan</option>
                <option>Palau</option>
                <option>Palestine State</option>
                <option>Panama</option>
                <option>Papua New Guinea</option>
                <option>Paraguay</option>
                <option>Peru</option>
                <option>Phillipines</option>
                <option>Poland</option>
                <option>Portugal</option>
                <option>Qatar</option>
                <option>Romania</option>
                <option>Russia</option>
                <option>Rwanda</option>
                <option>Saint Kitts and Nevis</option>
                <option>Saint Lucia</option>
                <option>Saint Vincent and the Grenadines</option>
                <option>Samoa</option>
                <option>San Marino</option>
                <option>Sao Tome and Principe</option>
                <option>Saudi Arabia</option>
                <option>Senegal</option>
                <option>Serbia</option>
                <option>Seychelles</option>
                <option>Sierra Leone</option>
                <option>Singapore</option>
                <option>Slovakia</option>
                <option>Slovenia</option>
                <option>Solomon Islands</option>
                <option>Somalia</option>
                <option>South Africa</option>
                <option>South Korea</option>
                <option>South Sudan</option>
                <option>Spain</option>
                <option>Sri Lanka</option>
                <option>Sudan</option>
                <option>Suriname</option>
                <option>Sweden</option>
                <option>Switzerland</option>
                <option>Syria</option>
                <option>Tajikistan</option>
                <option>Tanzania</option>
                <option>Thailand</option>
                <option>Timor-Leste</option>
                <option>Togo</option>
                <option>Tonga</option>
                <option>Trinidad and Tobago</option>
                <option>Tunisia</option>
                <option>Turkey</option>
                <option>Turkmenistan</option>
                <option>Tuvalu</option>
                <option>Uganda</option>
                <option>Ukraine</option>
                <option>United Arab Emirates</option>
                <option>United Kingdom</option>
                <option>United States of America</option>
                <option>Uruguay</option>
                <option>Uzbekistan</option>
                <option>Vanuatu</option>
                <option>Venezuela</option>
                <option>Vietnam</option>
                <option>Yemen</option>
                <option>Zambia</option>
                <option>Zimbabwe</option>
            </select>
        </div>
        <input type="text" placeholder={ data?.familyrequestform.email } required />
        <textarea placeholder={ data?.familyrequestform.additionalinfo } />
        <div>
            <button>{data?.familyrequestform.submit}</button>
            <div class="image">
                <input id="fileInput" type="file" accept="image/png, image/jpeg" />
                <button id="filebtn">{data?.familyrequestform.image}</button>
            </div>
        </div>
        <p id="frfrecievedtext" class="recievedtext">Request recieved!</p>
        <p id="frfspamtext" class="spamtext">You have sent 5 today, wait until tomorrow!</p>
    </form>
    
    <form id="cf" class="contact-form">
        <h2>{data?.contactform.header}</h2>
        <input type="text" placeholder={data?.contactform.email} required />
        <input type="text" placeholder={data?.contactform.subject} required />
        <textarea placeholder={data?.contactform.content} required />
        <button>{ data?.contactform.submit }</button>
        <p id="cfspamtext" class="spamtext">You have sent 5 today, wait until tomorrow!</p>
    </form>

</section>

<script>
    import { handleRequest, handleContact } from "../../data/firebase"
    const storage:any = window.localStorage;
    
    document.getElementById("frf")?.addEventListener("submit", (event:any) => {
        event.preventDefault();
        const date = new Date().getUTCDate();
        const frfIt:number = parseInt(storage.getItem("reqs"));
        const frfdate:number = parseInt(storage.getItem("reqstart"));

        if (isNaN(frfIt)) {
            storage.setItem("reqs", `${0}`)
        }

        // Potential error: Died in and gender can potentially send in translated
        // values, making it differ between person to person. Need to clean up the translation
        // once language becomes a thing.

        if (frfIt < 5 || isNaN(frfIt)) {
            if (isNaN(frfdate) || date - frfdate > 0) {
                console.log(event)
                let children = event.target[6].value.split(',')
                let diedinvalue = event.target[9].value

                if (diedinvalue === "Died in") {
                    diedinvalue = ""
                } else if (diedinvalue === "Birthcountry") {
                    diedinvalue = event.target[8].value
                }

                handleRequest({
                    firstname: event.target[0].value,
                    lastname: event.target[1].value,
                    gender: event.target[2].value,
                    birthdate: event.target[3].value,
                    mother: event.target[4].value,
                    father: event.target[5].value,
                    children: children,
                    about: event.target[7].value,
                    bornin: event.target[8].value,
                    diedin: diedinvalue,
                    email: event.target[10].value,
                    additional: event.target[11].value,
                    image: event.target[13].files[0],
                }).then(() => {
                    document.getElementById("frfrecievedtext")?.classList.add("active")
                })
                if (isNaN(frfIt)) {
                    storage.setItem("reqs", `${1}`)
                } else {
                    storage.setItem("reqs", `${frfIt + 1}`)
                }

            }
        } else {
            if (isNaN(frfdate)) {
                const day = `${new Date().getUTCDate()}}`
                storage.setItem("reqstart", day)
            }
            document.getElementById("frfspamtext")?.classList.add("active")
        }
            
    })

    document.getElementById("cf")?.addEventListener("submit", (event:any) => {
        event.preventDefault();
        const date = new Date().getUTCDate();
        const cfIt:number = parseInt(storage.getItem("conts"));
        const cfdate:number = parseInt(storage.getItem("contsstart"));
        
        if (isNaN(cfIt)) {
            storage.setItem("conts", `${0}`)
        }

        if (cfIt < 5 || isNaN(cfIt)) {
            if (isNaN(cfdate) || date - cfdate > 0) {
                const response = handleContact({
                    email: event.target[0].value,
                    subject: event.target[1].value,
                    content: event.target[2].value,
                });
                console.log(response)
                let p = document.createElement("p");
                p.innerText = `contact made on id: ${response}`;
                p.classList.add("responsetext")
                document.getElementById("cf")?.append(p)
                if (isNaN(cfIt)) {
                    storage.setItem("conts", `${1}`)
                } else {
                    storage.setItem("conts", `${cfIt + 1}`)
                }

            }
        } else {
            if (isNaN(cfdate)) {
                const day = `${new Date().getUTCDate()}`
                storage.setItem("contsstart", day)
            }
            document.getElementById("cfspamtext")?.classList.add("active")
        }
    })

    document.getElementById("fileInput")?.addEventListener("change", (event:any) => {
        if (event.type === "change") {
            console.log(event)
            let filebtn:any = document.getElementById("filebtn")
            filebtn.innerText = "Recieved";
        }
    })
    
</script>

<style>
    .frf-header {
        position: relative;
    }

    .frf-header::before {
        content: 'This is a form for sending information about a potential family member to us.';
        position: absolute;
        bottom: 150%;
        left: 0;
        height: 0;
        opacity: 0;
        overflow: hidden;
        width: 100%;

        padding: 1rem;
        border-radius: 0.5rem;

        font-size: 1rem;
        background-color: #5F209E;
        color: #ffffff;

        transition: 0.2s linear;
    }

    .frf-header:hover::before {
        height: 5rem;
        opacity: 1;
    }

    .spamtext {
        display: none;
        color: red;
    }
    .recievedtext {
        display: none;
        color: green;
    }

    .spamtext.active {
        display: inline;
    }
    .recievedtext.active {
        display: inline;
    }

    section {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(1, 1fr);
        grid-auto-flow: row dense;
        gap: 1rem;

        width: calc(100% - 4rem);
        min-height: 50vh;
        height: fit-content;

        padding: 2rem;
    }

    @media (max-width: 785px) {
        section {
            grid-template-columns: 1fr;
            grid-template-rows: auto;
        }
    }
    @media (max-width: 500px) {
        section {
            width: 100%;
            padding: 0;
        }
    }

    .family-request-form {
        grid-column: span 1;
        grid-row: span 1;

        display: flex;
        flex-direction: column;
        gap: 0.5rem;

        box-sizing: border-box;
        padding: 1rem;
        border: 1px solid #5F209E;
        border-radius: 0.5rem;

        background-color: #DCFED8;
    }
    .contact-form {
        grid-column: span 1;
        grid-row: span 1;

        display: flex;
        flex-direction: column;
        gap: 0.5rem;

        box-sizing: border-box;
        padding: 1rem;
        border: 1px solid #5F209E;
        border-radius: 0.5rem;

        background-color: #DCFED8;
    }

    form>h2 {
        margin: 0 auto
    }

    div {
        display: flex;
        gap: 0.5rem;
        width: 100%;
    }

    @media (max-width: 250px) {
        div {
            flex-direction: column;
        }
    }

    input {
        width: calc(100% - 0.4rem);
        margin: 0;
        padding: 0.2rem;
        border-radius: 0.5rem;
        border: 1px solid #5F209E;
        outline: 0;
    }

    select {
        width: calc(100% - 0.4rem);
        margin: 0;
        padding: 0.2rem;
        border-radius: 0.5rem;
        border: 1px solid #5F209E;
        outline: 0;
    }
    
    textarea {
        width: calc(100% - 0.4rem);
        margin: 0;
        padding: 0.2rem;
        border: 1px solid #5F209E;
        border-radius: 0.5rem;
        outline: 0;
        resize: none;
    }

    button {
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;

        background-color: #5F209E;
        color: #ffffff;
        transition: 0.1s linear;
        border: unset;
        outline: unset;
    }

    button:hover {
        font-size: 1rem;
    }

    button:active {
        font-size: 0.6rem;
    }

    .image {
        position: relative;

        width: fit-content;
    }

    .image input {
        position: absolute;
        top: 0;
        left: 0;

        width: 100%;
        height: 100%;

        padding: 0;
        margin: 0;

        opacity: 0;
    }

    .image button {
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;

        background-color: #5F209E;
        color: #ffffff;
        transition: 0.1s linear;
        border: unset;
        outline: unset;
    }

    .image:hover button {
        font-size: 1rem;
    }

    .image:active button {
        font-size: 0.6rem;
    }
</style>